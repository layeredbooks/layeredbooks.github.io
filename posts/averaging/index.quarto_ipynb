{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Averaging in discrete time\"\n",
        "author: \"Ola Dahl\"\n",
        "date: \"2025-01-04\"\n",
        "categories: [dynamic systems, network systems, discrete time, averaging]\n",
        "image: \"image.jpg\"\n",
        "---\n",
        "\n",
        "\n",
        "# Network systems\n",
        "\n",
        "I am reading the excellent book \n",
        "[Lectures on Network Systems](https://fbullo.github.io/lns){target=\"_blank\"} by Francesco Bullo. \n",
        "\n",
        "My goal is to learn more about dynamic systems that are built up as networks, and also how one can control such systems.\n",
        "\n",
        "## Averaging\n",
        "\n",
        "In the first chapter of the book, there is a section where network systems that do averaging are described.\n",
        "\n",
        "A network system can be described by an undirected graph. \n",
        "\n",
        "# A simple example\n",
        "\n",
        "As our first example, we create a graph with two nodes, and one \n",
        "edge between them. The graph is shown, as\n",
        "\n",
        "![](line.gv.png)\n",
        "\n",
        "We can think of the networked system, represented by the graph above, as having two \n",
        "[state variables](https://en.wikipedia.org/wiki/State_variable), one for each node. \n",
        "\n",
        "We denote these state variables as $x_1$ and $x_2$.\n",
        "\n",
        "An _averaging_ network system is a [dynamic system](https://en.wikipedia.org/wiki/Dynamical_system) where the update of a state variable is done calculating\n",
        "the average of the state variable itself, and all neighbouring state variables.\n",
        "\n",
        "For our example, with two nodes and an edge between then, each node only has one neigbour (the other node of the network). The average is then done\n",
        "by averaging the two nodes.\n",
        "\n",
        "Concentrating, as we will do in this blog post, on _discrete time_ dynamic systems, we compute, at each time instant, for each state variable, its _next_ value.\n",
        "\n",
        "For the system shown in the figure above, using the averaging approach that we have described, the equations for such computations become\n",
        "\n",
        "$$\n",
        "\\begin{aligned}\n",
        "x_1(k+1) &= (x_1(k) + x_2(k))/2 \\\\\n",
        "x_2(k+1) &= (x_2(k) + x_1(k))/2\n",
        "\\end{aligned}\n",
        "$$\n",
        "We say that the above computations describe how the state, represented by the variables $x_1$ and $x_2$ is _updated_. \n",
        "\n",
        "We can use a vector $x$, defined as\n",
        "$$\n",
        "x=\n",
        "\\begin{bmatrix}\n",
        "x_1 & x_2\n",
        "\\end{bmatrix}^T\n",
        "$$\n",
        "and a matrix $A$, defined as\n",
        "$$\n",
        "A=\n",
        "\\begin{bmatrix}\n",
        "1/2 & 1/2 \\\\\n",
        "1/2 & 1/2\n",
        "\\end{bmatrix}\n",
        "$$\n",
        "to write the state update equations as \n",
        "$$\n",
        "x(k+1) = Ax(k) \\quad \\quad \\quad (1)\n",
        "$$\n",
        "\n",
        "## Analysis\n",
        "Given an initial state $x(0)$, one might wonder what happens with $x(k)$ as the time $k$ increases?\n",
        "\n",
        "For example, will $x$ converge to a specific value?\n",
        "\n",
        "One could also wonder, if such a convergence happens, how long time (how many iterations) it would take?\n",
        "\n",
        "## Simulation\n",
        "\n",
        "We could answer our questions about what happens when time goes on, somewhat empirically, by making a _computer simulation_ of the dynamic system $(1)$.\n",
        "\n",
        "We decide to use Python, with `numpy` and `matplotlib`.\n",
        "\n",
        "A class, representing a dynamic system, can be created as\n",
        "```\n",
        "{python}\n",
        "import matplotlib.pyplot as plt\n",
        "plt.plot([1,2,3,4])\n",
        "plt.show()\n",
        "```\n"
      ],
      "id": "2388024b"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}